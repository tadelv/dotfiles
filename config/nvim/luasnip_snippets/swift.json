{
  "pub": {
    "prefix": "pub",
    "description": "public access control",
    "body": "public $0"
  },
  "priv": {
    "prefix": "priv",
    "description": "private access control",
    "body": "private $0"
  },
  "if": {
    "prefix": "if",
    "description": "if statement",
    "body": [
      "if $1 {",
      "\t$2",
      "\\}$0"
    ]
  },
  "ifl": {
    "prefix": "ifl",
    "description": "if let",
    "body": [
      "if let $1 = ${2:$1} {",
      "\t$3",
      "\\}$0"
    ]
  },
  "ifcl": {
    "prefix": "ifcl",
    "description": "if case let",
    "body": [
      "if case let $1 = $2 {",
      "\t$3",
      "\\}$0"
    ]
  },
  "guard": {
    "prefix": "guard",
    "description": "guard",
    "body": [
      "guard $1 else {",
      "\t$2",
      "\\}$0"
    ]
  },
  "guardl": {
    "prefix": "guardl",
    "description": "guard let",
    "body": [
      "guard let $1 = ${2:$1} else {",
      "\t$3",
      "\\}$0"
    ]
  },
  "guardcl": {
    "prefix": "guardcl",
    "description": "guard case let",
    "body": [
      "guard case let $2 = $2 else {",
      "\t$3",
      "\\}$0"
    ]
  },
  "for": {
    "prefix": "for",
    "description": "for loop",
    "body": [
      "for $1 in ${2:$1s} {",
      "\t$3",
      "\\}$0"
    ]
  },
  "while": {
    "prefix": "while",
    "description": "while loop",
    "body": [
      "while $1 {",
      "\t$2",
      "\\}$0"
    ]
  },
  "repeat": {
    "prefix": "repeat",
    "description": "reapeat-while",
    "body": [
      "repeat {",
      "\t$2",
      "\\} while $1"
    ]
  },
  "switch": {
    "prefix": "switch",
    "description": "switch-case",
    "body": [
      "switch $1 {",
      "\t$2",
      "\\}$0"
    ]
  },
  "case": {
    "prefix": "case",
    "description": "case",
    "body": [
      "case $1:",
      "\t$0"
    ]
  },
  "actor": {
    "prefix": "actor",
    "description": "Actor declaration",
    "body": [
      "actor $1 {",
      "\t$2",
      "\\}$0"
    ]
  },
  "class": {
    "prefix": "class",
    "description": "Class declaration",
    "body": [
      "class $1 {",
      "\t$2",
      "\\}$0"
    ]
  },
  "enum": {
    "prefix": "enum",
    "description": "Enum declaration",
    "body": [
      "enum $1 {",
      "\t$2",
      "\\}$0"
    ]
  },
  "extension": {
    "prefix": "extension",
    "description": "Extension declaration",
    "body": [
      "extension $1 {",
      "\t$2",
      "\\}$0"
    ]
  },
  "struct": {
    "prefix": "struct",
    "description": "Struct declaration",
    "body": [
      "struct $1 {",
      "\t$2",
      "\\}$0"
    ]
  },
  "protocol": {
    "prefix": "protocol",
    "description": "Protocol declaration",
    "body": [
      "protocol $1 {",
      "\t$2",
      "\\}$0"
    ]
  },
  "func": {
    "prefix": "func",
    "description": "Synchronous function declaration",
    "body": [
      "func $1($2) $3 {",
      "\t$4",
      "\\}",
      "$0"
    ]
  },
  "funca": {
    "prefix": "funca",
    "description": "Asynchronous function declaration",
    "body": [
      "func $1($2) async $3 {",
      "\t$4",
      "\\}",
      "$0"
    ]
  },
  "funct": {
    "prefix": "funct",
    "description": "Throwing function declaration",
    "body": [
      "func $1($2) throws $3 {",
      "\t$4",
      "\\}",
      "$0"
    ]
  },
  "let": {
    "prefix": "let",
    "description": "let constant declaration",
    "body": "let $1 = $2"
  },
  "var": {
    "prefix": "var",
    "description": "var variable declaratoin",
    "body": "var $1 = $2"
  },
  "ptrto": {
    "prefix": "ptrto",
    "description": "withUnsafePointerTo",
    "body": [
      "withUnsafePointerTo(to: $1) {",
      "\t$2",
      "\\}$0"
    ]
  },
  "tg": {
    "prefix": "tg",
    "description": "withTaskGroup",
    "body": [
      "await withTaskGroup(of: $1, returning: $2) {",
      "\t$3",
      "\\}$0"
    ]
  },
  "ttg": {
    "prefix": "ttg",
    "description": "withThrowingTaskGroup",
    "body": [
      "try await withThrowingTaskGroup(of: $1, returning: $2) {",
      "\t$3",
      "\\}$0"
    ]
  },
  "cont": {
    "prefix": "cont",
    "description": "withCheckedContinuation",
    "body": [
      "await withCheckedContinuation { cont in",
      "\t$1",
      "\\}$0"
    ]
  },
  "contt": {
    "prefix": "contt",
    "description": "withCheckedThrowingContinuation",
    "body": [
      "try await withCheckedThrowingContinuation { cont in",
      "\t$1",
      "\\}$0"
    ]
  },
  "main": {
    "prefix": "main",
    "description": "Explict Main entrypoint",
    "body": [
      "@main",
      "public struct ${1:App} {",
      "\tpublic static func main() {",
      "\t\t$2",
      "\t\\}",
      "\\}",
      "$0"
    ]
  },
  "maina": {
    "prefix": "maina",
    "description": "Asynchronous main entrypoint",
    "body": [
      "@main",
      "public struct ${1:App} {",
      "\tpublic static func main() async {",
      "\t\t$2",
      "\t\\}",
      "\\}",
      "$0"
    ]
  }
}
